
В PostgreSQL команда `VACUUM` — это важная команда для обслуживания базы данных, которая помогает поддерживать её здоровье и производительность.

---

## Что такое `VACUUM` в PostgreSQL?

`VACUUM` — это команда, которая очищает базу данных от "мусора" — устаревших или удалённых строк, которые остаются после операций `DELETE` и `UPDATE`. Эти устаревшие строки занимают место на диске и могут замедлять работу базы.

### Основные функции `VACUUM`:
- **Освобождение места**: удаляет устаревшие строки, освобождая пространство.
- **Обновление статистики**: помогает оптимизатору запросов получать актуальную информацию о таблицах.
- **Поддержка целостности**: предотвращает накопление "мертвых" данных, что важно для высокой производительности.

---

## Виды `VACUUM`

1. **`VACUUM`**  
   Выполняет очистку и обновление статистики. Не блокирует таблицы для чтения, но может блокировать для записи.

2. **`VACUUM FULL`**  
   Более агрессивная версия, которая полностью сжимает таблицу и освобождает всё неиспользуемое пространство. Может блокировать таблицы на время выполнения.

3. **Автоматический `autovacuum`**  
   В PostgreSQL по умолчанию работает автоматическая фоновая служба, которая периодически запускает `VACUUM`, чтобы поддерживать базу в хорошем состоянии без ручного вмешательства.

---

## Почему важно выполнять `VACUUM`?

- Без регулярного выполнения `VACUUM` таблицы могут разрастаться из-за "мертвых" строк.
- Это может привести к ухудшению производительности запросов.
- Особенно важно для таблиц с большим количеством операций удаления или обновления.

---

## Пример

---

## Автоматическое вакуумирование (`autovacuum`)

PostgreSQL по умолчанию включает автоматическую службу `autovacuum`, которая периодически запускает `VACUUM` для таблиц, чтобы поддерживать их в хорошем состоянии.

### Как проверить, включен ли autovacuum?

Выполните команду:

```sql
SHOW autovacuum;
```

Если результат — `on`, автоматическое вакуумирование включено.

---

## Настройка autovacuum

Параметры настройки находятся в файле конфигурации `postgresql.conf`. Вот основные параметры:

- `autovacuum = on` — включить автоматический вакуум (по умолчанию включен)
- `autovacuum_vacuum_threshold` — минимальное число изменений перед запуском VACUUM
- `autovacuum_vacuum_cost_limit` — лимит ресурсов для автовакиума
- `autovacuum_freeze_max_age` — возраст транзакций, при котором таблица подлежит заморозке (предотвращение wraparound)

Пример настройки (в файле `postgresql.conf`):

```conf
autovacuum = on
autovacuum_vacuum_threshold = 50
autovacuum_vacuum_cost_limit = 200
autovacuum_freeze_max_age = 200000000
```

После внесения изменений перезапустите PostgreSQL.

---

## Как выполнить VACUUM вручную

Если нужно запустить вакуум принудительно или для конкретной таблицы, используйте команду:

```sql
VACUUM; -- для всей базы данных
```

или

```sql
VACUUM table_name; -- для конкретной таблицы
```

### Пример:

```sql
VACUUM my_table;
```

Если хотите выполнить более глубокую очистку и сжатие (аналог `VACUUM FULL`, который занимает больше времени и блокирует таблицу):

```sql
VACUUM FULL my_table;
```

---

## Итог

- **Автоматический вакуум** обычно работает по умолчанию. Проверьте его статус командой `SHOW autovacuum;`.
- **Настраивайте параметры** в файле конфигурации при необходимости.
- **Ручной VACUUM** можно запускать через SQL-команды по мере необходимости.

Если нужно — помогу подготовить конкретные настройки или подсказать, как их применить!
